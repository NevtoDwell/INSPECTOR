const fs = require('fs');
const path = require('path');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è JSON-—Ñ–∞–π–ª–∞
function readJSON(filePath) {
  try {
    const data = fs.readFileSync(filePath, 'utf-8');
    return JSON.parse(data);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ ${filePath}:`, error.message);
    return [];
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–æ–≤, —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤ –∏–∑ —Ç–µ–∫—Å—Ç–∞
function cleanText(text) {
  return text
    .replace(/[\u{1F300}-\u{1FAD6}|\u{1F600}-\u{1F64F}|\u{1F680}-\u{1F6FF}|\u{2600}-\u{26FF}|\u{2700}-\u{27BF}|üî¥|‚ö°|üíé|‚úÖ|‚ñ™Ô∏é|<<|>>]/gu, '') // –£–±–∏—Ä–∞–µ–º —Å–º–∞–π–ª–∏–∫–∏ –∏ —Å–∏–º–≤–æ–ª—ã
    .replace(/\s+/g, '') // –£–¥–∞–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–±–µ–ª—ã
    .toLowerCase() // –ü—Ä–∏–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏–∏
    .trim();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–æ –∑–∞–≥–æ–ª–æ–≤–∫—É)
function filterByTitle(data, title) {
  return data.filter((item) => item.title === title);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã –≤ —á–∏—Å–ª–æ
function parsePrice(price) {
  return parseFloat(price.replace(/[^\d.]/g, ''));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –¥–æ –ø–µ—Ä–≤–æ–π –∑–∞–ø—è—Ç–æ–π
function getTextBeforeComma(text) {
  return text.split(',')[0];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ä–∞–∑–ª–∏—á–∏–π –±–µ–∑ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
function findUniqueDifferences(array1, array2) {
  const differences = [];
  const processedDescriptions = new Set();

  array1.forEach((item1) => {
    const cleanedDesc1 = cleanText(item1.descText);

    if (processedDescriptions.has(cleanedDesc1)) return;

    const matchingItem = array2.find((item2) => {
      const cleanedDesc2 = cleanText(item2.descText);
      return cleanedDesc1 === cleanedDesc2;
    });

    if (matchingItem) {
      const price1 = parsePrice(item1.price);
      const price2 = parsePrice(matchingItem.price);
      const priceDifference = Math.abs(price1 - price2).toFixed(2);

      differences.push({
        differenceType: cleanedDesc1 === cleanText(matchingItem.descText) ? '‚úÖ‚úÖ‚úÖ SAME' : '‚ùå‚ùå‚ùå DIFFERENT',
        title: item1.title,
        descText1: getTextBeforeComma(item1.descText),
        descText2: getTextBeforeComma(matchingItem.descText),
        price1Rusya: item1.price,
        price2BestRmt: matchingItem.price,
        priceDifference: `${priceDifference} ‚ÇΩ`,
      });
    } else {
      differences.push({
        differenceType: '‚ùå‚ùå‚ùå ADD ME',
        title: item1.title,
        descText: getTextBeforeComma(item1.descText),
        price: item1.price,
      });
    }

    processedDescriptions.add(cleanedDesc1);
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ñ—Ñ–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ—Ç —É –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  array2.forEach((item2) => {
    const cleanedDesc2 = cleanText(item2.descText);

    if (!processedDescriptions.has(cleanedDesc2)) {
      differences.push({
        differenceType: '‚ûï‚ûï‚ûï ADDITIONAL LOT',
        title: item2.title,
        descText: getTextBeforeComma(item2.descText),
        price: item2.price,
      });
    }
  });

  return differences;
}

// –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
function compareFiles() {
  const file1Path = path.join(__dirname, 'user_1.json');
  const file2Path = path.join(__dirname, 'user_2.json');
  const outputPath = path.join(__dirname, 'differences.json');

  const data1 = readJSON(file1Path);
  const data2 = readJSON(file2Path);

  // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –¥–ª—è "–ê–ª–º–∞–∑—ã AFK Arena"
  // const filterName = "–î–æ–Ω–∞—Ç Brawl Stars"
  
  // const filteredData1 = filterByTitle(data1, filterName);
  // const filteredData2 = filterByTitle(data2, filterName);

  // –ù–∞—Ö–æ–¥–∏–º —Ä–∞–∑–ª–∏—á–∏—è
  const differences = findUniqueDifferences(data1, data2);

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–∏—è –≤ —Ñ–∞–π–ª
  fs.writeFileSync(outputPath, JSON.stringify(differences, null, 2), 'utf-8');
  console.log(`–†–∞–∑–ª–∏—á–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ —Ñ–∞–π–ª differences.json`);
}

compareFiles();
